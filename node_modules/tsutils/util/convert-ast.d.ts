import * as ts from 'typescript';
export interface NodeWrap {
    node: ts.Node;
<<<<<<< HEAD
    kind: ts.SyntaxKind;
=======
>>>>>>> 2e293db1c7c010f382ed29edfd57694d2fb6282a
    children: NodeWrap[];
    next?: NodeWrap;
    skip?: NodeWrap;
    parent?: NodeWrap;
}
<<<<<<< HEAD
export interface WrappedAst extends NodeWrap {
    next: NodeWrap;
    skip: undefined;
    parent: undefined;
}
export interface ConvertedAst {
    wrapped: WrappedAst;
=======
export interface ConvertedAst {
    wrapped: NodeWrap;
>>>>>>> 2e293db1c7c010f382ed29edfd57694d2fb6282a
    flat: ReadonlyArray<ts.Node>;
}
export declare function convertAst(sourceFile: ts.SourceFile): ConvertedAst;
